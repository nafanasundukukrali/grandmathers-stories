# Программа для вычисления суммы ряда (вариант 71) с точностью до члена ряда ε.
# Входные данные: значение аргумента, требуемая точность, максимальное количество итераций и шаг печати
# Выходные данные:  таблица промежуточных вычислений с заданным шагом и результат - вычисленное значение суммы ряда
# либо сообщение о том, что за указанное число итераций необходимой точности достичь не удалось.

# Ввод данных
# Значение пргумента для бесконечного ряда
x = float(input('Введите значение аргумента: '))
# Точность
input_epsilon = float(input('Введите необходимую точность (больше 0, меньше 1): '))
# Максимальное количество итераций
max_iteration = int(input('Введите натуральное число максимального количества итераций: '))
# Шаг для вывода таблички
step = int(input('Введите натуральное чилсо в качестве шага для печати интераций: '))

# Обработка данных и вывод результата
# Следующая строчка для вывода после прибавления шага (считается от 0)
actual_line_in_table = 0
# Текущая сумма ряда
sum_of_series = 0
# Текущий нечетный n, необходимый для вычисления необходимого факториала и степени текущего члена ряда
right_uneven_number = 1
# Последний вычисленный член ряда
last_member_in_series = x
# Текущий факториал, небходимый для вычилсения текущего члена ряда
factorial = 1
# Вывод "шапки" таблицы
print('-'*67)
print('|'+'{:^21}'.format('№ итерации')+'|'+'{:^21}'.format('t')+'|'+'{:^21}'.format('s')+'|')
print('-'*67)
# Вывод соотвествующих строк таблицы с введенным шагом
for i in range(0, max_iteration):
    # Прибавление последнего вычисленного члена ряда к сумме
    sum_of_series += last_member_in_series
    # Если номер строчки соотвествует последней неоходимой
    if i == actual_line_in_table:
        # Строчка выводится
        print('|'+'{:^21}'.format(i+1)+'|'+'{:^21.10g}'.format(last_member_in_series)+'|'
              + '{:^21.10g}'.format(sum_of_series) + '|')
        # Вычисляется следующая нужная строчка
        actual_line_in_table += step
    # Если последний член ряда меньше необходимой точности
    if abs(last_member_in_series) <= input_epsilon:
        # Выводится низ таблицы и искомый ответ, программа выходит из цикла и завершает работу
        print('-' * 67)
        print('Сумма бесконечного ряда - ', end='')
        print('{:.10g}'.format(sum_of_series)+',', 'вычислена за', i+1, 'операций.')
        break
    # В противном случае вычисляется следующий член последовательности
    else:
        # Вычисляется необходимый факториал
        for j in range(right_uneven_number+1, right_uneven_number+3):
            factorial *= j
        # Вычисляется нужное нечётное число
        right_uneven_number += 2
        # Получается следующий член ряда
        last_member_in_series = x ** right_uneven_number / factorial
# Работа цикла завершена. Если не возможно дойти до точности, необходмой по условию, то программа выводит сообщние
# об ошибке.
if abs(last_member_in_series) > input_epsilon:
    print('-' * 67)
    print('За указанное число итераций необходимой точности достичь не удалось.')

